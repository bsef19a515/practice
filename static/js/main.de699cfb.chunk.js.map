{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","onClick","togglemode","role","htmlFor","defaultProps","about","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","head","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showAlert","newk","length","newtwo","replace","split","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.de699cfb.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n         <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <a className=\"nav-link\" href=\"/about\">{props.about}</a> */}\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n     <input className=\"form-check-input mx-3\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n     <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    about:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\n    title:\"Here is a title\",\r\n    about:\"Here is about\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function (props) {\r\n    const [text,setText]=useState(\"\")\r\n    \r\n   const uppercase=()=>{\r\n      // console.log(\"btn was clicked\");\r\n       let newtext=text.toUpperCase();\r\n       setText(newtext)\r\n       props.showAlert(\"Converted to Uppercase\", \"success\")\r\n     \r\n   }\r\n   const clear=()=>{\r\n       //console.log(\"clear\");\r\n       let newone=\"\";\r\n       setText(newone)\r\n       props.showAlert(\"All text has been cleared\", \"success\")\r\n\r\n   }\r\n   const len=()=>{\r\n        let newk=text.length;\r\n        setText(\"The Length of previous text is \"+newk)\r\n        props.showAlert(\"Length function has been called\", \"success\")\r\n\r\n   }\r\n   const rep=()=>{\r\n     let newtwo=text.replace('kinza',\"Kinza_Arshad\")\r\n     setText(newtwo)\r\n     props.showAlert(\"All text has been replaced\", \"success\")\r\n\r\n\r\n   }\r\n   const handlefun=(event)=>{\r\n     //  console.log(\"chnage\");\r\n       setText(event.target.value)\r\n   }\r\n  return (\r\n    <>\r\n    <div className='container my-3' style={{color:props.mode==='dark'? 'white':'black'}}> \r\n    <h1 className='my-3'>Forms</h1>\r\n    <h1>{props.head}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control \" value={text} onChange={handlefun} style={{backgroundColor:props.mode==='dark'? 'rgb(65, 65, 105)':'white', color:props.mode==='dark'? 'white':'black'}} id=\"mybox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className='btn btn-primary mx-2' onClick={uppercase} >Convert to Uppercase</button>\r\n<button className='mx-2' onClick={clear}>Clear</button>\r\n<button className='mx-2' onClick={len}>Length</button>\r\n<button className='mx-2' onClick={rep}>Replace</button>\r\n\r\n    </div>\r\n     <div className=\"container my-4\" style={{color:props.mode==='dark'? 'white':'black'}}>\r\n       <h2>Your Text Summary :</h2>\r\n       <p>{text.split(\" \").length} words and {text.length} chracters</p>\r\n       <p>{0.008* text.split(\" \").length} Minutes to read</p>\r\n       <h2>Preview</h2>\r\n       <p>{text}</p>\r\n     </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function(props) {\r\n  return (\r\n    \r\n    props.alert && <div  >\r\n     <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\n//import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\nimport Alert from \"./Components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n     setAlert({\n       msg:message,\n       type:type\n     })\n     setTimeout(() => {\n       setAlert(null)\n     }, 1500);\n  }\n  const togmode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='rgb(22, 22, 51)'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title='TextUtils-Dark mode'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title='TextUtils-Light mode'\n    }\n  }\n  return (\n<>\n      {/* <Router> */}\n          <Navbar title=\"TextUtilBlog\" about=\"About\" mode={mode} togglemode={togmode}  />\n          <Alert alert={alert}/>\n          {/* <Routes>\n              <Route path='/about' element={<About/>} />\n              <Route path='/' element={<Textform  showAlert={showAlert}  head=\"Enter the text to Analyze below\" mode={mode}/>} />\n          </Routes>\n          </Router> */}\n          <Textform  showAlert={showAlert}  head=\"Enter the text to Analyze below\" mode={mode}/> \n  \n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}